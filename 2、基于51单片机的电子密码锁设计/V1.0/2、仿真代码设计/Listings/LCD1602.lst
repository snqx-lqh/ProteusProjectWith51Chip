C51 COMPILER V9.60.0.0   LCD1602                                                           06/16/2023 12:41:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: I:\Program\Keil5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include "LCD1602.h"
   2          
   3          /**
   4            * @name    Lcd1602_Delay1ms
   5            * @brief   延时函数，延时1ms
   6            * @param   : [输入/出] 
   7            * @retval  返回值
   8            */
   9          void Lcd1602_Delay1ms(unsigned int c)   //误差 0us
  10          {
  11   1          unsigned char a,b;
  12   1              for (; c>0; c--)
  13   1              {
  14   2                       for (b=199;b>0;b--)
  15   2                       {
  16   3                              for(a=1;a>0;a--);
  17   3                       }      
  18   2              }
  19   1              
  20   1      }
  21          /**
  22            * @name    LcdWriteCom
  23            * @brief   向LCD写入一个字节的命令
  24            * @param   com
  25            * @retval  返回值
  26            */
  27          void LcdWriteCom(unsigned char com)       //写入命令
  28          {
  29   1              LCD1602_E = 0;     //使能
  30   1              LCD1602_RS = 0;    //选择发送命令
  31   1              LCD1602_RW = 0;    //选择写入
  32   1              
  33   1              LCD1602_DATAPINS = com;     //放入命令
  34   1              Lcd1602_Delay1ms(1);            //等待数据稳定
  35   1      
  36   1              LCD1602_E = 1;            //写入时序
  37   1              Lcd1602_Delay1ms(5);      //保持时间
  38   1              LCD1602_E = 0;
  39   1      }
  40          /**
  41            * @name    LcdWriteData
  42            * @brief   向LCD写入一个字节的数据
  43            * @param   dat
  44            * @retval  返回值
  45            */
  46          void LcdWriteData(unsigned char dat)                    //写入数据
  47          {
  48   1              LCD1602_E = 0;  //使能清零
  49   1              LCD1602_RS = 1; //选择输入数据
  50   1              LCD1602_RW = 0; //选择写入
  51   1      
  52   1              LCD1602_DATAPINS = dat; //写入数据
  53   1              Lcd1602_Delay1ms(1);
  54   1      
C51 COMPILER V9.60.0.0   LCD1602                                                           06/16/2023 12:41:06 PAGE 2   

  55   1              LCD1602_E = 1;   //写入时序
  56   1              Lcd1602_Delay1ms(5);   //保持时间
  57   1              LCD1602_E = 0;
  58   1      }       
  59          /**
  60            * @name    LcdInit
  61            * @brief   初始化LCD屏
  62            * @param   无
  63            * @retval  返回值
  64            */
  65          void LcdInit()                                            //LCD初始化子程序
  66          {
  67   1              LcdWriteCom(0x38);  //开显示
  68   1              LcdWriteCom(0x0c);  //开显示不显示光标
  69   1              LcdWriteCom(0x06);  //写一个指针加1
  70   1              LcdWriteCom(0x01);  //清屏
  71   1              LcdWriteCom(0x80);  //设置数据指针起点
  72   1      }       
  73          /**
  74            * @name    LcdSetCursor
  75            * @brief   设置显示 RAM 起始地址，亦即光标位置，(x,y)-对应屏幕上的字符坐标
  76            * @param   x y
  77            * @retval  返回值
  78            */
  79          void LcdSetCursor(unsigned char x, unsigned char y)
  80          {
  81   1              unsigned char addr;
  82   1      
  83   1              if (y == 0) //由输入的屏幕坐标计算显示 RAM 的地址
  84   1                      addr = 0x00 + x; //第一行字符地址从 0x00 起始
  85   1              else
  86   1                      addr = 0x40 + x; //第二行字符地址从 0x40 起始
  87   1              LcdWriteCom(addr | 0x80); //设置 RAM 地址
  88   1      }
  89          /**
  90            * @name    LcdShowStr
  91            * @brief   在液晶上显示字符串，(x,y)-对应屏幕上的起始坐标，str-字符串指针
  92            * @param   x y str
  93            * @retval  返回值
  94            */
  95          void LcdShowStr(unsigned char x, unsigned char y, unsigned char *str)
  96          {
  97   1              LcdSetCursor(x, y); //设置起始地址
  98   1              while (*str != '\0') //连续写入字符串数据，直到检测到结束符
  99   1              {
 100   2                      LcdWriteData(*str++); //先取 str 指向的数据，然后 str 自加 1
 101   2              }
 102   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
